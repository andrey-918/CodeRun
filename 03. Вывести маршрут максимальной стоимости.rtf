{\rtf1\ansi\ansicpg1251\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://coderun.yandex.ru/problem/print-the-route-of-the-maximum-cost?currentPage=1&pageSize=10&rowNumber=3"}}{\fldrslt 
\f0\fs24 \cf0 https://coderun.yandex.ru/problem/print-the-route-of-the-maximum-cost?currentPage=1&pageSize=10&rowNumber=3}}
\f0\fs24 \
def get_answer(n, m, A):\
    dp = [[-10000000000 for i in range(m + 1)] for j in range (n + 1)]\
    dp[1][1] = A[0][0]\
    answer = []\
    for i in range (1, n + 1):\
        for j in range (1, m + 1):\
            if i == j and i == 1:continue\
            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + A[i - 1][j - 1]\
    x = m\
    y = n\
    while x > 1 and y > 1:\
\
        if dp[y - 1][x] >= dp[y][x - 1]:\
            y -= 1\
            answer.append('D')\
        else:\
            x -= 1\
            answer.append('R')\
    for i in range (x - 1):\
        answer.append('R')\
    for i in range (y - 1):\
        answer.append('D')\
    return dp[n][m], reversed(answer)\
n, m = map(int, input().split())\
A = []\
for i in range (n):\
    buf = list(map(int, input().split()))\
    A.append(buf)\
number, answer = get_answer(n, m, A)\
print(number)\
print(*answer)}